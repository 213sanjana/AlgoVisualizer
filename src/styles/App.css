body {
    font-family: 'Poppins', sans-serif;
    background: linear-gradient(135deg, #0a0a1a 0%, #1a1a2e 50%, #16213e 100%);
    color: #e0e6ed;
    margin: 0;
    padding: 0;
    overflow-y: scroll;
    min-height: 100vh;
}

/* Searching Component Styles */
.searching-container {
    text-align: center;
    padding: 20px;
}

.searching-controls {
    margin-top: 20px;
}

.searching-button {
    padding: 10px 20px;
    margin: 5px;
    font-size: 16px;
    border-radius: 10px; /* Rounded edges */
    cursor: pointer;
    color: black; /* Ensure button text is black */
}

.searching-button:disabled {
    background-color: grey;
    cursor: not-allowed;
}

.searching-algorithm-selection {
    margin-top: 20px;
}

.searching-array-container {
    display: flex;
    justify-content: center;
    align-items: flex-end;
    height: 100px;
    margin-top: 10px;
}

.searching-array-bar {
    width: 30px;
    margin: 0 2px;
    background-color: #61dafb;
    text-align: center;
    color: rgb(39, 38, 38);
}

/* Sorting Component Styles */
.sorting-container {
    text-align: center;
    padding: 20px;
}

.sorting-controls {
    margin-top: 20px;
}

.sorting-button {
    padding: 10px 20px;
    margin: 5px;
    font-size: 16px;
    border-radius: 10px; /* Rounded edges */
    cursor: pointer;
    color: black; /* Ensure button text is black */
}

.sorting-button:disabled {
    background-color: grey;
    cursor: not-allowed;
}

.sorting-algorithm-selection {
    margin-top: 20px;
}

.sorting-array-container {
    display: flex;
    justify-content: center;
    align-items: flex-end;
    height: 100px;
    margin-top: 10px;
}

.sorting-array-bar {
    width: 30px;
    margin: 0 2px;
    background-color: #61dafb;
    text-align: center;
    color: rgb(39, 38, 38);
}

/* Global button sizing and spacing rules
   - Buttons auto-size to text (no fixed widths)
   - Consistent padding: 10px top/bottom, 20px left/right
   - Prevent text wrap inside buttons
   - For containers that already use flex/grid, a gap of 10px will ensure equal spacing
   NOTE: We intentionally do NOT set background or color here so existing colors/hover remain unchanged.
*/
:where(button, input[type="button"], input[type="submit"], .button, .btn, [role="button"]) {
    padding: 10px 20px;
    white-space: nowrap;
    display: inline-block; /* allow auto width based on content */
    width: auto;
    min-width: max-content; /* ensure text is never cut off */
    box-sizing: border-box;
    vertical-align: middle;
}

/* Apply gap to common controls containers when they are flex/grid (gap has no effect otherwise) */
:where(.searching-controls, .sorting-controls, .controls, .export-controls, .simple-export-controls, .button-group, .btn-group, .controls-row, .control-row) {
    gap: 10px;
}

/* Prevent buttons inside flex/grid control containers from shrinking and ensure equal spacing */
:where(.searching-controls, .sorting-controls, .controls, .export-controls, .simple-export-controls, .button-group, .btn-group, .controls-row, .control-row) :where(button, input[type="button"], input[type="submit"], .button, .btn, [role="button"]) {
    /* in case the container is a flex/grid, stop buttons from shrinking */
    flex: 0 0 auto;
    -ms-flex: 0 0 auto; /* IE10 fallback */
}

/* Utility: keep buttons visually consistent inside small screens while preserving responsiveness */
@media (max-width: 480px) {
    :where(button, input[type="button"], input[type="submit"], .button, .btn) {
        padding: 8px 14px; /* slightly smaller on very small screens */
    /* keep nowrap but allow buttons to remain readable; min-width remains max-content to avoid cutting text */
    min-width: max-content;
    }
}